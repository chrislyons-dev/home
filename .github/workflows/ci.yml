name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Validate commit messages
        if: github.event_name == 'push'
        run: npx commitlint --from HEAD~1 --to HEAD --verbose

      - name: Validate PR commits
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      - name: Run tests
        run: npm test -- --run

      - name: Build project
        run: npm run build

      - name: Run Lighthouse CI
        run: npm run lighthouse
        continue-on-error: true

      - name: Upload Lighthouse results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results
          path: .lighthouseci
          retention-days: 30

  build-docs:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: ci

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Node dependencies
        run: npm ci

      - name: Install MkDocs and dependencies
        run: |
          pip install mkdocs-material
          pip install mkdocstrings
          pip install pymdown-extensions

      - name: Generate architecture documentation
        run: npm run docs:arch

      - name: Install Graphviz for dependency graphs
        run: sudo apt-get update && sudo apt-get install -y graphviz

      - name: Generate SVG dependency graph
        run: npm run deps:graph || true

      - name: Generate PlantUML diagrams
        run: |
          if [ -d "docs/architecture/generated" ] && [ -n "$(find docs/architecture/generated -name '*.puml' 2>/dev/null)" ]; then
            docker run --rm -v "$PWD:/data" plantuml/plantuml:latest -tpng "/data/docs/architecture/generated/*.puml"
          fi
        continue-on-error: true

      - name: Build MkDocs site
        run: mkdocs build --strict

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site/
