name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  deployments: write

concurrency:
  group: "cloudflare-deployment"
  cancel-in-progress: false

jobs:
  check-deployment-needed:
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.check.outputs.deploy }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if deployment needed
        id: check
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "deploy=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Check if source files changed in the last commit
          git diff --name-only HEAD~1 HEAD > changed_files.txt
          if grep -v -E '^(docs/|.*\.md$|CONTRIBUTING\.md|DEVELOPMENT\.md|DEPLOYMENT\.md|README\.md)' changed_files.txt; then
            echo "deploy=true" >> $GITHUB_OUTPUT
            echo "Source code changes detected - deployment needed"
          else
            echo "deploy=false" >> $GITHUB_OUTPUT
            echo "Only documentation changes - skipping deployment"
          fi

  deploy-cloudflare:
    runs-on: ubuntu-latest
    needs: check-deployment-needed
    if: ${{ needs.check-deployment-needed.outputs.should-deploy == 'true' && (github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch') }}
    environment:
      name: cloudflare-pages
      url: ${{ steps.deployment.outputs.url }}
    permissions:
      contents: read
      deployments: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Deploy to Cloudflare Pages
        id: deployment
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: chrislyons-dev
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref_name }}
